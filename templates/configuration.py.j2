# Example: ALLOWED_HOSTS = ['netbox.example.com', 'netbox.internal.local']
ALLOWED_HOSTS =  '{{ netbox_allowed_hosts | to_json }}' 

# PostgreSQL database configuration.
DATABASE = {
    'NAME': '{{ netbox_database }}',    	     	# Database name
    'USER': '{{ netbox_database_user }}',               # PostgreSQL username
{% if netbox_database_host is defined %}
    'PASSWORD': '{{ netbox_database_password }}',       # PostgreSQL password
    'HOST':  "{{ netbox_database_host }}",     		# Database server
    'PORT': "{{ netbox_database_port }}",               # Database port (leave blank for default)
{% endif %}
}

# This key is used for secure generation of random numbers and strings. It must never be exposed outside of this file.
# For optimal security, SECRET_KEY should be at least 50 characters in length and contain a mix of letters, numbers, and
# symbols. NetBox will not run without this defined. For more information, see
# https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-SECRET_KEY
SECRET_KEY = '{{ netbox_secret_key }}'


#########################
#                       #
#   Optional settings   #
#                       #
#########################

# Specify one or more name and email address tuples representing NetBox administrators. These people will be notified of
# application errors (assuming correct email settings are provided).
ADMINS = [
    # ['John Doe', 'jdoe@example.com'],
]

# Email settings
EMAIL = {
    'SERVER': 'localhost',
    'PORT': 25,
    'USERNAME': '',
    'PASSWORD': '',
    'TIMEOUT': 10,  # seconds
    'FROM_EMAIL': '',
}

# Setting this to True will permit only authenticated users to access any part of NetBox. By default, anonymous users
# are permitted to access most data in NetBox (excluding secrets) but not make any changes.
LOGIN_REQUIRED = '{{ "True" if netbox_login_required else "False" }}'

# Base URL path if accessing NetBox within a directory. For example, if installed at http://example.com/netbox/, set:
# BASE_PATH = 'netbox/'
BASE_PATH = '{{ netbox_current_path }}'

# Setting this to True will display a "maintenance mode" banner at the top of every page.
MAINTENANCE_MODE = False

# Credentials that NetBox will use to access live devices.
NETBOX_USERNAME = ''
NETBOX_PASSWORD = ''

# Determine how many objects to display per page within a list. (Default: 50)
PAGINATE_COUNT = '{{ netbox_paginate_count }}'

# Time zone (default: UTC)
TIME_ZONE = '{{ netbox_timezone }}'

# Date/time formatting. See the following link for supported formats:
# https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date
DATE_FORMAT = '{{ netbox_date_format }}'
SHORT_DATE_FORMAT = '{{ netbox_short_date_format }}'
TIME_FORMAT = '{{ netbox_time_format }}'
SHORT_TIME_FORMAT = '{{ netbox_short_time_format }}'
DATETIME_FORMAT = '{{ netbox_datetime_format }}'
SHORT_DATETIME_FORMAT = '{{ netbox_short_datetime_format }}'

# Optionally display a persistent banner at the top and/or bottom of every page. To display the same content in both
# banners, define BANNER_TOP and set BANNER_BOTTOM = BANNER_TOP.
BANNER_TOP = ''
BANNER_BOTTOM = ''

# When determining the primary IP address for a device, IPv6 is preferred over IPv4 by default. Set this to True to
# prefer IPv4 instead.
PREFER_IPV4 = '{{ "True" if netbox_prefer_ipv4 else "False" }}'

# Enforcement of unique IP space can be toggled on a per-VRF basis. To enforce unique IP space within the global table
# (all prefixes and IP addresses not assigned to a VRF), set ENFORCE_GLOBAL_UNIQUE to True.
ENFORCE_GLOBAL_UNIQUE = False
